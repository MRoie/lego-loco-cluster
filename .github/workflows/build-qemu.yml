name: Build QEMU Container

on:
  push:
    branches: [ main, develop, codex/setup-qemu-container-with-pcem-config ]
    paths:
      - 'containers/qemu/**'
      - 'scripts/create_win98_image.sh'
      - '.github/workflows/build-qemu.yml'
  workflow_dispatch:
    inputs:
      build_snapshots:
        description: 'Build pre-configured snapshots'
        required: false
        default: 'false'
        type: boolean
      image_tag:
        description: 'Image tag to use'
        required: false
        default: 'latest'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mroie/qemu-loco
  SNAPSHOT_REGISTRY: ghcr.io/mroie/qemu-snapshots

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
        
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and Push QEMU container
      run: |
        cd containers/qemu
        
        # Build with latest tag
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
        
        # Tag with commit SHA
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
        # Push both tags
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
        echo "✅ QEMU container published successfully"
    
    - name: Build snapshots
      if: github.event.inputs.build_snapshots == 'true' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/codex/setup-qemu-container-with-pcem-config'
      run: |
        # Install dependencies
        sudo apt-get update
        sudo apt-get install -y qemu-utils
        
        # Create minimal test VM image
        mkdir -p images
        qemu-img create -f qcow2 images/win98.qcow2 2G
        
        # Create simple boot sector for testing
        dd if=/dev/zero of=images/boot.img bs=512 count=1 2>/dev/null
        echo -en '\x55\xAA' | dd of=images/boot.img bs=1 seek=510 conv=notrunc 2>/dev/null
        
        # Copy boot sector to the qcow2 image
        qemu-img create -f raw images/base.img 2G 2>/dev/null
        dd if=images/boot.img of=images/base.img conv=notrunc 2>/dev/null
        qemu-img convert -f raw -O qcow2 images/base.img images/win98.qcow2
        
        # Build snapshot containers directly
        for variant in base games productivity; do
          echo "Building snapshot: $variant"
          
          # Create working directory
          work_dir="/tmp/snapshot-build-$variant"
          mkdir -p "$work_dir"
          
          # Copy snapshot file
          cp images/win98.qcow2 "$work_dir/snapshot.qcow2"
          
          # Create Dockerfile
          cat > "$work_dir/Dockerfile" << EOF
        FROM alpine:latest
        RUN echo "Snapshot container for $variant variant" > /etc/motd
        COPY snapshot.qcow2 /snapshot.qcow2
        LABEL variant="$variant"
        LABEL base-image="win98"
        LABEL created="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        CMD ["cat", "/etc/motd", "&&", "ls", "-la", "/snapshot.qcow2"]
        EOF
          
          # Build snapshot container
          docker build -t "${{ env.SNAPSHOT_REGISTRY }}:win98-$variant" "$work_dir"
          
          # Clean up
          rm -rf "$work_dir"
        done
        
        echo "✅ All snapshot variants built successfully"
    
    - name: Push snapshots
      if: github.event.inputs.build_snapshots == 'true' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/codex/setup-qemu-container-with-pcem-config'
      run: |
        for variant in base games productivity; do
          docker tag ${{ env.SNAPSHOT_REGISTRY }}:win98-${variant} \
                     ${{ env.SNAPSHOT_REGISTRY }}:win98-${variant}-${{ github.sha }}
          docker push ${{ env.SNAPSHOT_REGISTRY }}:win98-${variant}
          docker push ${{ env.SNAPSHOT_REGISTRY }}:win98-${variant}-${{ github.sha }}
        done
    
    - name: Summary
      run: |
        echo "✅ Build complete!"
        echo "QEMU Container: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        if [[ "${{ github.event.inputs.build_snapshots }}" == "true" || "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "Snapshots:"
          echo "  ${{ env.SNAPSHOT_REGISTRY }}:win98-base"
          echo "  ${{ env.SNAPSHOT_REGISTRY }}:win98-games"
          echo "  ${{ env.SNAPSHOT_REGISTRY }}:win98-productivity"
        fi

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Build the backend and frontend assets
  build:
    runs-on: ubuntu-latest
    container:
      image: node:20-bullseye
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Node dependencies and build frontend
        run: |
          # Backend packages
          cd backend && npm install && cd ..
          # Frontend packages and production build
          cd frontend && npm install && npm run build && cd ..

  # Spin up a Talos cluster and run connectivity tests
  integration:
    needs: build
    runs-on: ubuntu-22.04
    container:
      image: node:20-bullseye
      options: --privileged
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install system packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            qemu-system-x86 qemu-kvm wine gstreamer1.0-tools \
            pulseaudio docker.io tcpdump netcat-openbsd
      - name: Install Node dependencies
        run: |
          cd backend && npm install && cd ..
      - name: Install talosctl
        run: |
          curl -L https://github.com/siderolabs/talos/releases/latest/download/talosctl-linux-amd64 -o talosctl
          install -m 0755 talosctl /usr/local/bin/talosctl
      - name: Create Talos cluster
        run: |
          talosctl cluster create --name loco --workers 1 --wait
          talosctl kubeconfig .
          echo "KUBECONFIG=$PWD/kubeconfig" >> "$GITHUB_ENV"
      - name: Deploy cluster
        run: kubectl apply -k kustomize/base
      - name: Wait for cluster
        run: kubectl wait --for=condition=Ready pod --all --timeout=300s
      - name: Run network tests
        run: bash k8s-tests/test-network.sh
      - name: Run TCP tests
        run: bash k8s-tests/test-tcp.sh
      - name: Run broadcast tests
        run: bash k8s-tests/test-broadcast.sh
      - name: Upload integration logs
        uses: actions/upload-artifact@v4
        with:
          name: integration-logs
          path: k8s-tests/logs
      - name: Destroy Talos cluster
        if: always()
        run: talosctl cluster destroy loco || true

  # Run end-to-end tests against local services
  e2e:
    needs: build
    runs-on: ubuntu-22.04
    container:
      image: node:20-bullseye
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install system packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
      - name: Install Node dependencies
        run: |
          cd backend && npm install && cd ..
          cd frontend && npm install && npm run build && cd ..
      - name: Start services
        run: scripts/start_test_services.sh
      - name: Run websocket tests
        run: bash k8s-tests/test-websocket.sh
      - name: Stop services
        if: always()
        run: scripts/stop_test_services.sh
      - name: Upload e2e logs
        uses: actions/upload-artifact@v4
        with:
          name: e2e-logs
          path: k8s-tests/logs

  # Deploy services in Talos and run live end-to-end tests
  e2e-live:
    needs: build
    runs-on: ubuntu-22.04
    container:
      image: node:20-bullseye
      options: --privileged
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install system packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            qemu-system-x86 qemu-kvm wine gstreamer1.0-tools \
            pulseaudio docker.io tcpdump netcat-openbsd
      - name: Install Node dependencies
        run: |
          cd backend && npm install && cd ..
          cd frontend && npm install && npm run build && cd ..
      - name: Install talosctl
        run: |
          curl -L https://github.com/siderolabs/talos/releases/latest/download/talosctl-linux-amd64 -o talosctl
          install -m 0755 talosctl /usr/local/bin/talosctl
      - name: Create Talos cluster
        run: |
          talosctl cluster create --name loco --workers 1 --wait
          talosctl kubeconfig .
          echo "KUBECONFIG=$PWD/kubeconfig" >> "$GITHUB_ENV"
      - name: Deploy cluster
        run: kubectl apply -k kustomize/base
      - name: Wait for cluster
        run: kubectl wait --for=condition=Ready pod --all --timeout=300s
      - name: Start forwards
        run: scripts/start_live_cluster.sh
      - name: Run websocket tests against cluster
        env:
          STREAM_CONFIG: /tmp/live_instances.json
        run: bash k8s-tests/test-websocket.sh
      - name: Stop cluster forwards
        if: always()
        run: scripts/stop_live_cluster.sh
      - name: Upload live e2e logs
        uses: actions/upload-artifact@v4
        with:
          name: live-e2e-logs
          path: k8s-tests/logs
      - name: Destroy Talos cluster
        if: always()
        run: talosctl cluster destroy loco || true
